plugins {
    id 'org.springframework.boot' version '2.4.12'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'org.sonarqube' version '3.0'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "2020.0.0")
}

dependencies {
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation "io.springfox:springfox-boot-starter:${springfox_starter_version}"
    implementation "org.redisson:redisson:${redisson_version}"
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    implementation "io.jsonwebtoken:jjwt-api:${jwt_version}"
    implementation "io.jsonwebtoken:jjwt-impl:${jwt_version}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jwt_version}"
    implementation "org.apache.commons:commons-lang3:${apache_commons_version}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logstash_logback_version}"
    testImplementation 'com.h2database:h2'
    liquibaseRuntime 'com.h2database:h2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
